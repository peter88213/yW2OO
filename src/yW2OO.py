'''

yW2OO.py

@summary: Postprocessor for yWriter5 HTML export to make it suitable for Open/LibreOffice Writer
    * This script removes several unwanted tags generated by yWriter5, such as table and font specification.
    * This script sets Chapter headings to "Heading 2" and modifies the String "Chapter" if you wish.
    * This script sets Scene headings to "Heading 4".
    * It is assumed that in Writer, default paragraphs will be set to "First-line indent" manually or by macro.  
    * This script sets the first paragraph of each chapter and scene to "Heading 6"
    * It is assumed that in Writer, "Heading 6" paragraphs will be set to "Text body" manually or by macro.
    * This script converts "italic" and "bold" into "emphasized" and "strong" according to Writer's character styles.
    * This script converts US dashes into european dashes if spaced.
    * This script converts spaces before dashes and ellipses into non-breaking space characters.
    * This script removes empty paragraphs within scenes.

@author: Peter Triesberger
@see: https://github.com/peter88213/yW2OO
@version: v1.2.1
@license: The MIT License (https://opensource.org/licenses/mit-license.php)
@copyright: (c) 2018, Peter Triesberger
@return: Exit code (0 if no error occurred; 1 if  file "Exported Project.html" cannot be read or written).
@precondition: The file "Exported Project.html" must exist with r/w access in the working directory.
@postcondition: The file "Exported Project.html" is modified (see summary).
@since: 2018-10-01
@change: 2018-10-03 v1.2.1: Added exit codes, start message and epydoc fields.
'''
import sys
startMessage = '\nyW2OO preprocessor v1.2.1'

HTMLfileName = "Exported Project.html" # yWriter5 default
stringBeforeChapterNumber = "Chapter " # US: Chapter; Germany: Kapitel;  could also be a dash
stringAfterChapterNumber = "" # could be a dash
#dash = "&ndash;" # &mdash; (---) or &ndash; (--)


replaceList =[
    "<p align='justify'><i>&nbsp;</i></p>\n<p class='Para'>|<H6>|",
    "<br /><br /><br /><center>* * *</center><br /><br />\n\n<p class='Para'>|<H4>* * *</H4>\n<H6>|",
    "<table align=center border=0 width=790>||",
    "<tr><td>||",
    #"&mdash;|"+dash+"|",
    " &mdash;|&nbsp;&ndash;|",
    "&mdash; |&ndash; |",
    "<font name='arial' size=+1>||",
    "</font>||",
    "</td></tr></table>||",
    "<p align='justify'><i>&nbsp;</i></p>||",
    "<p class='Para'></p>||",
    "</b></center>|"+stringAfterChapterNumber+"</H2>|",
    "<center><b>|<H2>|",
    "Chapter |"+stringBeforeChapterNumber+"|",
    "<b>|<STRONG>|",
    "</b>|</STRONG>|",
    "<i>|<EM>|",
    "</i>|</EM>|",
    #" "+dash+"|&nbsp;"+dash+"|",
    " &hellip;|&nbsp;&hellip;|",
    ]

def searchAndReplace(processData, replaceList):
    '''
    @summary: Modifying a string by looping through a list of search/replacement items.
    @param: processData: string to be modified.
    @param: replaceList: list of strings containing search/replacement items. 
        Structure of each list element: "<search item>|<replacement item>|" 
        The replacement item can be empty.  
    @return: Modified string
    '''   
    for line in replaceList:
        replaceItem = line.split("|") 
        processData = processData.replace(replaceItem[0],replaceItem[1])
    return(processData)


if __name__ == '__main__':
    print(startMessage)
    try:     
        HTMLfile = open(HTMLfileName,'r')
        HTMLdata = HTMLfile.read()
        HTMLfile.close()
        HTMLdata = searchAndReplace(HTMLdata, replaceList)
        HTMLfile = open(HTMLfileName,'w')
        HTMLfile.write(HTMLdata)
        HTMLfile.close()
        message = '"'+HTMLfileName+'" successfully converted.'
        print(message)
        exitcode = 0
    except:
        message = 'ERROR: Cannot access "'+HTMLfileName+'"!'
        print(message)
        exitcode = 1
    sys.exit(exitcode)
    
    