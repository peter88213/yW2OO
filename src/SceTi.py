'''

SceTi.py

@summary: Adds scene titles from yWriter's exported scene descriptions 
    as HTML comments to the pre-processed HTML export file.
    OpenOffice shall display these comments e.g. in the Navigator.
    This script reads scene titles from "Auto_Descriptions.txt" 
    generated by yWriter (Project>Export Project>Scene descriptions).
    This script identifies scene beginnings in htmlFileName 
    by the <h6> tag inserted by yW2OO.py postprocessor. 
    The exported yWriter scenes must not be empty.
@author: Peter Triesberger
@see: https://github.com/peter88213/yW2OO
@license: The MIT License 
    (https://opensource.org/licenses/mit-license.php)
@copyright: (c) 2019, Peter Triesberger
@return: Exit code 
    0 if no error occurred; 
    1 if "Auto_Descriptions.txt" cannot be read; 
    2 if "Exported Project.html" cannot be read; 
    3 if "Exported Project.html" is not pre-processed 
        or contains no scene; 
    4 if "Exported Project.html" and "Auto_Descriptions.txt" 
        contain different numbers of scenes; 
    5 if "Exported Project.html" cannot be written. 
@precondition: The file "Exported Project.html" must exist 
    with r/w access in the working directory.
    It must be pre-processed by yW2OO.py, 
    i.e. each scene begins with a <H6> formatted paragraph. 
@precondition: The File "Auto_Descriptions.txt" must exist 
    in the directory just above the working directory. 
    It must match to htmlFileName, 
    i.e the number of sceneTitles must be the same.
@postcondition: The file "Exported Project.html" is modified 
    (see summary).
@since: 2019-10-05
@change: 2019-10-06 v1.1.0 
    Scene titles are taken from "Auto_Descriptions.txt" 
    instead of "auto_outline.txt". 
    Each scene gets a number.
@change: 2019-10-21 v1.1.1 
    Refactoring for unit test support.
@change: 2019-10-21 v1.1.2 
    Further refactoring: Renamed "main" function to "AnnotateScenes".
@change: 2019-10-21 v1.2.0 
    Further refactoring and code documentation. New exit codes.
@change: 2019-10-21 v1.3.0 
    "CollectSceneTitles" gets filename as parameter 
    and returns simple list of scenes. 
    "AnnotateScenes" uses this data to create HTML comments.

'''
import sys, re

startMessage = '\nSceTi adding yWriter scene titles to HTML export v1.2.0' 
# Don't forget to set the correct version number!

descFileName = "../Auto_Descriptions.txt"   # (yWriter: "Project>Export Project>Scene descriptions").
htmlFileName = "Exported Project.html"      # (yWriter: "Project>Export Project>to HTML").

descSceneMarker = "^ 0"      # Due to yWriter's scene numbering beginning with '0.1' in each chapter.
htmlSceneMarker = "<H6>"     # Due to yW2OO's preprocessing. 


def CollectSceneTitles(inputFileName):
    ''' Generate a list of numbered scene titles. '''
    try:
        # Open the scene descriptions exported by yWriter (hopefully fitting to the exported project).
        descFile = open(inputFileName,'r')
        descData = descFile.readlines()
        descFile.close()
    except:
        print('ERROR: Cannot open "' + inputFileName + '".\nPlease export outline first!\n')
        sys.exit(1)
    else:
        sceneTitles=[]      # List of numbered scene titles.
        chapterNo = -1      # Counts non-empty lines representing chapter titles.
                            # The first non-empty line represents the project title 
                            # and is considered "chapter # 0".
        for line in descData:
            # Count chapter entries and generate annotations with numbered scene titles.            
            if re.search(".+", line.rstrip()) is not None:
                # Line is not empty -- is it a scene title?
                if re.search(descSceneMarker, line) is None:
                    # Line is not a scene title -- so it must be the next chapter title.
                    chapterNo = chapterNo + 1
                else:
                    # Line is a scene title -- Replace the first characters by the chapter number 
                    # and add it to the list.
                    sceneTitles.append(re.sub(descSceneMarker, str(chapterNo), line))
        return(sceneTitles)


def AnnotateScenes():
    ''' Put HTML annotations with numbered scene titles to scene beginnings. ''' 
    print(startMessage)     # Must contain the correct version number!
    try:
        # Open yWriter's HTML export file (hopefully pre-processed by yW2OO.py).       
        htmlFile = open(htmlFileName,'r')
        htmlData = htmlFile.readlines()
        htmlFile.close()        
    except:
        print('ERROR: Cannot open "'+htmlFileName+'".\nPlease export yWriter project as HTML first!\n')
        sys.exit(2)
    else:
        sceneTitles = CollectSceneTitles(descFileName)
        outlineSceneCount = len(sceneTitles)    # Number of scenes found in yWriter's scene descriptions.
        # Now browse the HTML project file for scene beginnings.      
        htmlSceneCount = 0                      # Counts paragraphs formatted by yW2OO.py as scene beginnings. 
        htmlWithAnnotations=[]                  # HTML lines including annotations (to be generated).
        for line in htmlData:
            if line.count(htmlSceneMarker) > 0:
                # Found a new scene in the project -- Does it fit to yWriter's scene descriptions?
                if htmlSceneCount < outlineSceneCount:
                    # Maybe ... so let's insert an one-line HTML annotation containing the title.
                    htmlWithAnnotations.append("<!-- "+sceneTitles[htmlSceneCount].rstrip()+" -->\n")
                htmlSceneCount = htmlSceneCount +1  # Increase the ACTUAL number of scenes.
            htmlWithAnnotations.append(line)        # Copy original HTML line.           
        if htmlSceneCount == 0:
            # Not a single HTML scene marker was found: The HTML file seems to be not preprocessed.
            print('ERROR: "'+htmlFileName+'" is not pre-processed or contains no scene.\nPlease run yW2OO.py first!\n')
            sys.exit(3)
        elif htmlSceneCount != outlineSceneCount:
            # HTML export and scene descriptions seem not to fit together. 
            print('ERROR: "'+htmlFileName+'" and "'+descFileName+'" do not match.\nPlease re-export outline first!\n')
            sys.exit(4)
        else:
            # HTML export and scene descriptions have the same number of scenes.
            try:
                # Overwrite yWriter's HTML export file.
                htmlFile = open(htmlFileName,'w')
                htmlFile.writelines(htmlWithAnnotations)
                htmlFile.close()
                print('Added '+str(outlineSceneCount)+' scene titles as comments to "'+htmlFileName+'".\n')
            except:
                print('ERROR: Cannot write "'+htmlFileName+'".\n')
                sys.exit(5)
            else:
                return(0)


if __name__ == '__main__':
    AnnotateScenes()  

