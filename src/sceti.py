""" Add scene titles to yWriter's html export.

@summary: Adds scene titles as comments to yWriter's html export file.
    OpenOffice shall convert these html comments into navigable items.
@author: Peter Triesberger
@see: https://github.com/peter88213/yW2OO
@license: The MIT License 
    (https://opensource.org/licenses/mit-license.php)
@copyright: (c) 2019, Peter Triesberger
@return: Exit code 
    0 if no error occurred; 
    1 if any error occurred.
@precondition: The file "Exported Project.html" must exist 
    with r/w access in the working directory.
    It must be pre-processed by yW2OO.py. 
@precondition: The File "Auto_Descriptions.txt" must exist 
    in the working directory. 
    It must match to "Exported Project.html", 
    i.e the number of sceneTitles must be the same.
@postcondition: The file "Exported Project.html" is overwritten 
    by a new version containing scene titles as html comments. 
@since: 2019-10-05
"""

import re
import sys

VERSION = 'v1.4.5'

START_MESSAGE = "\nSceTi - Add yWriter's scene titles to its html export " + VERSION

# Generated by yWriter.
# Invoking command: "Project > Export Project > Scene descriptions").
DSCR_FILE = 'Auto_Descriptions.txt'

# Generated by yWriter.
# Invoking command: "Project > Export Project > to html").
HTML_FILE = 'Exported Project.html'

# The scene numbering in yWriter's scene descriptions begins with '0.1'
# in each chapter, so scene titles can be identified by a leading ' 0'
DSCR_SCENE_MARKER = '^ 0'

# The yW2OO preprocessor formats each scene's first paragraph as a
# 6th level heading. Scene title annotations are to be inserted here.
HTML_SCENE_MARKER = '<H6>'


def collect_scene_titles():
    """ Generate a list of numbered scene titles. """
    try:
        with open(DSCR_FILE, 'r') as f:
            descData = f.readlines()
    except:
        print('ERROR: Cannot open "' + DSCR_FILE +
              '".\nPlease export outline first!\n')
        sys.exit(1)

    else:
        # Identify scene titles, replace their first characters
        # by the chapter number, and add them to the scene list.
        # Non-blank lines without a scene marker count as
        # chapter titles.
        sceneList = []
        # The first chapter title is preceded by the project title.
        # This is compensated by a negative chapter counter preset.
        chapterCount = -1
        for line in descData:
            if re.search(DSCR_SCENE_MARKER, line):
                sceneList.append(
                    re.sub(DSCR_SCENE_MARKER, str(chapterCount), line))
            elif re.search('.+', line.rstrip()):
                chapterCount = chapterCount + 1
        return(sceneList)


def insert_scene_titles(sceneTitles):
    """ Put html comments with numbered scene titles to scene beginnings. """
    try:
        with open(HTML_FILE, 'r') as f:
            htmlInput = f.readlines()
    except IOError:
        print('ERROR: Cannot open "' + HTML_FILE +
              '".\nPlease export yWriter project as html first!\n')
        sys.exit(1)

    # Identify scene beginnings and insert html annotations before them.
    htmlOutput = []
    sceneCountReference = len(sceneTitles)
    sceneCountActual = 0
    for line in htmlInput:
        if line.count(HTML_SCENE_MARKER):
            try:
                htmlOutput.append(
                    '<!-- ' + sceneTitles[sceneCountActual].rstrip() + ' -->\n')
            except IndexError:
                # Actual count exceeds reference count;
                # this error is considered later on.
                pass
            sceneCountActual = sceneCountActual + 1
        # Copy the original html line.
        htmlOutput.append(line)

    if sceneCountActual == 0:
        print('ERROR: "' + HTML_FILE +
              '" is not preprocessed or contains no scene.\nPlease run yW2OO.py first!\n')
        sys.exit(1)

    if sceneCountActual != sceneCountReference:
        print('ERROR: "' + HTML_FILE + '" and "' + DSCR_FILE +
              '" do not match.\nPlease re-export outline first!\n')
        sys.exit(1)

    try:
        with open(HTML_FILE, 'w') as f:
            f.writelines(htmlOutput)
        print('Added ' + str(sceneCountReference) +
              ' scene titles as comments to "' + HTML_FILE + '".\n')
    except IOError:
        print('ERROR: Cannot write "' + HTML_FILE + '".\n')
        sys.exit(1)


def main():
    print(START_MESSAGE)
    insert_scene_titles(collect_scene_titles())


if __name__ == '__main__':
    main()
