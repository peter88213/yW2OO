""" Add scene titles to yWriter's html export.

@summary: Adds scene titles as comments to yWriter's html export file.
    OpenOffice shall convert these html comments into navigable items.
@author: Peter Triesberger
@see: https://github.com/peter88213/yW2OO
@license: The MIT License 
    (https://opensource.org/licenses/mit-license.php)
@copyright: (c) 2019, Peter Triesberger
@return: Exit code 
    0 if no error occurred; 
    1 if any error occurred.
@precondition: The file "Exported Project.html" must exist 
    with r/w access in the working directory.
    It must be pre-processed by yW2OO.py. 
@precondition: The File "Auto_Descriptions.txt" must exist 
    in the working directory. 
    It must match to "Exported Project.html", 
    i.e the number of sceneTitles must be the same.
@postcondition: The file "Exported Project.html" is overwritten 
    by a new version containing scene titles as html comments. 
@since: 2019-10-05
@change: 2019-10-06 v1.1.0 
    Scene titles are taken from "Auto_Descriptions.txt" 
    instead of "auto_outline.txt". Each scene gets a number.
@change: 2019-10-21 v1.1.1 
    Refactoring for unit test support.
@change: 2019-10-21 v1.1.2 
    Further refactoring: Renamed "main" function to "main".
@change: 2019-10-21 v1.2.0 
    Further refactoring and code documentation. New exit codes.
@change: 2019-10-21 v1.3.0 
    "collect_scene_titles" gets filename as parameter 
    and returns simple list of scenes. 
    "main" uses this data to create html comments.
@change: 2019-10-23 v1.3.1
    Further refactoring according to PEP 8 style guide
    (see https://www.python.org/dev/peps/pep-0008/)
@change: 2019-10-27 v1.4.0 
    Set all exit codes to 1.
@change: 2019-10-28 v1.4.1 
    Minor refactoring: Use context manager for file operations.
@change: 2019-10-30 v1.4.3 
    Minor refactoring: Straighten control flow; Specify exceptions.
@change: 2019-10-31 v1.4.4 
    Refactoring to reduce the amount of code comments.
"""

import re
import sys

VERSION = 'v1.4.4'

START_MESSAGE = '\nSceTi adding yWriter scene titles to html export ' + VERSION

# Generated by yWriter.
# Invoking command: "Project > Export Project > Scene descriptions").
DESC_FILE = 'Auto_Descriptions.txt'

# Generated by yWriter.
# Invoking command: "Project > Export Project > to html").
HTML_FILE = 'Exported Project.html'

# The scene numbering in yWriter's scene descriptions begins with '0.1'
# in each chapter, so scene titles can be identified by a leading ' 0'
DESC_SCENE_MARKER = '^ 0'

# The yW2OO preprocessor formats each scene's 1st paragraph as a 6th
# level heading. Scene title annotations are to be inserted here.
HTML_SCENE_MARKER = '<H6>'


def collect_scene_titles():
    """ Generate a list of numbered scene titles. """
    try:
        with open(DESC_FILE, 'r') as f:
            descData = f.readlines()
    except:
        print('ERROR: Cannot open "' + DESC_FILE +
              '".\nPlease export outline first!\n')
        sys.exit(1)

    else:
        sceneTitles = []
        # The first chapter title is predeceded by the project title.
        # This is compensated by a negative chapter counter preset.
        chapterCount = -1
        for line in descData:
            # Identify scene titles, replace their first characters
            # by the chapter number, and add them to the scene list.
            # Non-blank Lines without a scene marker
            # count as chapter titles.
            if re.search(DESC_SCENE_MARKER, line):
                sceneTitles.append(
                    re.sub(DESC_SCENE_MARKER, str(chapterCount), line))
            elif re.search('.+', line.rstrip()):
                chapterCount = chapterCount + 1
        return(sceneTitles)


def insert_scene_titles(sceneTitles):
    """ Put html comments with numbered scene titles to scene beginnings. """
    try:
        with open(HTML_FILE, 'r') as f:
            htmlData = f.readlines()
    except IOError:
        print('ERROR: Cannot open "' + HTML_FILE +
              '".\nPlease export yWriter project as html first!\n')
        sys.exit(1)

    sceneCountReference = len(sceneTitles)
    SceneCountActual = 0
    htmlWithAnnotations = []
    for line in htmlData:
        # Identify scene beginnings and insert html annotations there.
        if line.count(HTML_SCENE_MARKER):
            try:
                htmlWithAnnotations.append(
                    '<!-- ' + sceneTitles[SceneCountActual].rstrip() + ' -->\n')
            except IndexError:
                # Actual count exceeds reference count.
                pass
            SceneCountActual = SceneCountActual + 1
        # Copy original html line.
        htmlWithAnnotations.append(line)

    if SceneCountActual == 0:
        print('ERROR: "' + HTML_FILE +
              '" is not pre-processed or contains no scene.\nPlease run yW2OO.py first!\n')
        sys.exit(1)

    if SceneCountActual != sceneCountReference:
        print('ERROR: "' + HTML_FILE + '" and "' + DESC_FILE +
              '" do not match.\nPlease re-export outline first!\n')
        sys.exit(1)

    try:
        with open(HTML_FILE, 'w') as f:
            f.writelines(htmlWithAnnotations)
        print('Added ' + str(sceneCountReference) +
              ' scene titles as comments to "' + HTML_FILE + '".\n')
    except IOError:
        print('ERROR: Cannot write "' + HTML_FILE + '".\n')
        sys.exit(1)


def main():
    print(START_MESSAGE)
    insert_scene_titles(collect_scene_titles())


if __name__ == '__main__':
    main()
