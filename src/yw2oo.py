""" yWriter to OpenOffice conversion tool.

@summary: Postprocessor for yWriter html export to make it suitable 
    for Open/LibreOffice Writer
    *   This script removes several unwanted tags generated by yWriter, 
        such as table and font specification.
    *   This script sets Chapter headings to "Heading 2" 
        and modifies the String "Chapter" if you wish.
    *   This script sets Scene headings to "Heading 4".
    *   It is assumed that in Writer, default paragraphs will be 
        set to "First-line indent" manually or by macro.  
    *   This script sets the first paragraph of each chapter 
        and scene to "Heading 6"
    *   It is assumed that in Writer, "Heading 6" paragraphs will be 
        set to "Text body" manually or by macro.
    *   This script converts "italic" and "bold" into "emphasized" 
        and "strong" according to Writer's character styles.
    *   This script converts US dashes into european dashes if spaced.
    *   This script converts spaces before dashes and ellipses 
        into non-breaking space characters.
    *   This script removes empty paragraphs within scenes.
@author: Peter Triesberger
@see: https://github.com/peter88213/yW2OO
@license: The MIT License 
    (https://opensource.org/licenses/mit-license.php)
@copyright: (c) 2019, Peter Triesberger
@return: Exit code 
    0 if no error occurred; 
    1 if any error occurred.
@precondition: The file "Exported Project.html" must exist 
    with r/w access in the working directory.
@postcondition: The file "Exported Project.html" is modified 
    (see summary).
@since: 2018-10-01
@change: 2018-10-03 v1.2.1 
    Added exit codes, start message and epydoc fields.
@change: 2018-10-10 v1.3.0 
    Added yWriter6 tags to replaceList. 
    Added all possible html scene dividers.
@change: 2019-08-18 v1.4.0 
    Changed processing of dashes and ellipses 
    (just revert yWriter's mdash conversion). 
    Replace double spaces by single spaces.
@change: 2019-09-17 v1.5.0 
    Changed processing of chapter headings. 
    Remove "Chapter" and add a period to the chapter number.
@change: 2019-10-05 v1.5.1 
    Changed start message.
@change: 2019-10-10 v1.6.0 
    Modified processing of empty scene dividers.
@change: 2019-10-21 v1.6.1 
    Refactoring for unit test support.
@change: 2019-10-21 v1.6.2 
    Further refactoring: Renamed "main" function to "main".
@change: 2019-10-21 v1.7.0 
    Further refactoring and code documentation. New exit codes.
@change: 2019-10-23 v1.8.0
    Removed leader and trailer for scene numbers.
    Further refactoring according to PEP 8 style guide
    (see https://www.python.org/dev/peps/pep-0008/)
@change: 2019-10-27 v1.9.0 
    Set all exit codes to 1.
@change: 2019-10-28 v1.9.1 
    Minor refactoring: Use context manager for file operations.
@change: 2019-10-30 v1.9.2 
    Minor refactoring: Straighten control flow; Specify exceptions;
    cover faulty replacements list.
"""
import sys

VERSION = 'v1.9.2'

# Don't forget to set the correct version number!
START_MESSAGE = '\nyW2OO restructuring yWriter html export ' + VERSION

# (yWriter: "Project>Export Project>to html").
HTML_FILE = 'Exported Project.html'

DELIMITER = '|'


# Replacements to be made (see search_and_replace()):
# NOTE: Double quotes are required
# because search strings contain single quotes.
myReplaceList = [
    "<p align='justify'><i>&nbsp;</i></p>\n<p class='Para'>|<H6>|",
    "<br /><br /><br /><center>&nbsp;</center><br /><br />\n\n<p class='Para'>|<H4>* * *</H4>\n<H6>|",
    "<br /><br /><br /><center>*</center><br /><br />\n\n<p class='Para'>|<H4>*</H4>\n<H6>|",
    "<br /><br /><br /><center>* * *</center><br /><br />\n\n<p class='Para'>|<H4>* * *</H4>\n<H6>|",
    "<br /><br /><br /><center>#</center><br /><br />\n\n<p class='Para'>|<H4>#</H4>\n<H6>|",
    "<br /><br /><br /><center>-=#=-</center><br /><br />\n\n<p class='Para'>|<H4>-=#=-</H4>\n<H6>|",
    "<br /><br /><br /><center>&bull;</center><br /><br />\n\n<p class='Para'>|<H4>&bull;</H4>\n<H6>|",
    "<center></center>\n\n<p class='Para'>|<H4>* * *</H4>\n<H6>|",
    "<center>&nbsp;</center>\n\n<p class='Para'>|<H4>* * *</H4>\n<H6>|",
    "<center>*</center>\n\n<p class='Para'>|<H4>*</H4>\n<H6>|",
    "<center>* * *</center>\n\n<p class='Para'>|<H4>* * *</H4>\n<H6>|",
    "<center>#</center>\n\n<p class='Para'>|<H4>#</H4>\n<H6>|",
    "<center>-=#=-</center>\n\n<p class='Para'>|<H4>-=#=-</H4>\n<H6>|",
    "<center>&bull;</center>\n\n<p class='Para'>|<H4>&bull;</H4>\n<H6>|",
    "<table align=center border=0 width=790>||",
    "<tr><td>||",
    "<font name='arial' size=+1>||",
    "</font>||",
    "</td></tr></table>||",
    "<p align='justify'><i>&nbsp;</i></p>||",
    "<p class='Para'></p>||",
    "</b></center>|</H2>|",
    "<center><b>|<H2>|",
    "<p class='chapter'>|<H2>|",
    "Chapter ||",
    "<b>|<STRONG>|",
    "</b>|</STRONG>|",
    "<i>|<EM>|",
    "</i>|</EM>|",
    "&mdash;|--|",
    "  | |",
    "  | |",
]


def search_and_replace(processData, replaceList):
    """ Multiple search and replace text in a string

    @summary: Modifying a string by looping through a list of search/replacement items.
    @param: processData: string to be modified.
    @param: replaceList: list of strings containing search/replacement items. 
        Structure of each list element: "<search item>|<replacement item>|" 
        The replacement item can be empty.  
    @return: Modified string, None if input data is misformatted.
    """
    for line in replaceList:
        if line.count(DELIMITER) == 2:
            replaceItem = line.split(DELIMITER)
            processData = processData.replace(replaceItem[0], replaceItem[1])
        else:
            return(None)
    return(processData)


def main():
    """ Restructure and clean up yWriter's html export. """
    print(START_MESSAGE)
    try:
        with open(HTML_FILE, 'r') as f:
            myHtmlData = f.read()
    except IOError:
        print('ERROR: Cannot read "' + HTML_FILE + '"!\n')
        sys.exit(1)

    myHtmlData = search_and_replace(myHtmlData, myReplaceList)
    assert myHtmlData != None

    try:
        with open(HTML_FILE, 'w') as f:
            f.write(myHtmlData)
    except IOError:
        print('ERROR: Cannot write "' + HTML_FILE + '"!\n')
        sys.exit(1)

    print('"' + HTML_FILE + '" successfully processed.\n')
    return(0)


if __name__ == '__main__':
    main()
